# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2018-06-24 17:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_company_create_time'),
        ('product', '0003_supplier_company'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComboPack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('combo_code', models.CharField(help_text='组合sku编码', max_length=30, verbose_name='组合sku编码')),
                ('combo_name', models.CharField(blank=True, help_text='组合名称', max_length=50, null=True, verbose_name='组合名称')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('company', models.ForeignKey(help_text='公司', null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Company', verbose_name='公司')),
            ],
            options={
                'verbose_name_plural': '组合产品',
                'verbose_name': '组合产品',
            },
        ),
        migrations.CreateModel(
            name='ComboSKU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(help_text='产品编码', max_length=30, verbose_name='产品编码')),
                ('quantity', models.IntegerField(help_text='数量', verbose_name='数量')),
                ('combo_pack', models.ForeignKey(help_text='组合产品', null=True, on_delete=django.db.models.deletion.CASCADE, to='product.ComboPack', verbose_name='组合产品')),
            ],
            options={
                'verbose_name_plural': '组合内产品',
                'verbose_name': '组合内产品',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(help_text='产品编码', max_length=30, verbose_name='产品编码')),
                ('cn_name', models.CharField(help_text='中文名称', max_length=60, verbose_name='中文名称')),
                ('image', models.ImageField(blank=True, help_text='产品图片', max_length=200, null=True, upload_to='', verbose_name='产品图片')),
                ('status', models.CharField(choices=[('ON_SALE', '在售'), ('OFFLINE', '停售'), ('CLEAN', '清仓中'), ('UNKNOWN', '自动创建')], help_text='产品状态', max_length=10, verbose_name='产品状态')),
                ('cost', models.FloatField(help_text='成本价', verbose_name='成本价')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('en_name', models.CharField(blank=True, help_text='英文名称', max_length=80, null=True, verbose_name='英文名称')),
                ('length', models.FloatField(blank=True, help_text='长', null=True, verbose_name='长')),
                ('width', models.FloatField(blank=True, help_text='宽', null=True, verbose_name='宽')),
                ('heigth', models.FloatField(blank=True, help_text='高', null=True, verbose_name='高')),
                ('weight', models.FloatField(blank=True, help_text='重量', null=True, verbose_name='重量')),
                ('declared_value', models.FloatField(blank=True, help_text='申报价值', null=True, verbose_name='申报价值')),
                ('url', models.CharField(blank=True, help_text='商品URL', max_length=20, null=True, verbose_name='商品URL')),
                ('is_battery', models.BooleanField(default=False, help_text='是否带电', verbose_name='是否带电')),
                ('is_jack', models.BooleanField(default=False, help_text='是否带插座', verbose_name='是否带插座')),
                ('is_brand', models.BooleanField(default=False, help_text='是否有品牌', verbose_name='是否有品牌')),
                ('brand_name', models.CharField(blank=True, help_text='品牌名称', max_length=20, null=True, verbose_name='品牌名称')),
                ('brand_model', models.CharField(blank=True, help_text='品牌型号', max_length=20, null=True, verbose_name='品牌型号')),
                ('company', models.ForeignKey(help_text='公司', null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Company', verbose_name='公司')),
            ],
            options={
                'verbose_name_plural': '产品库',
                'verbose_name': '产品库',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='RegCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_value', models.FloatField(help_text='进口申报价值', verbose_name='进口申报价值')),
                ('import_rate', models.FloatField(blank=True, help_text='进口关税率', null=True, verbose_name='进口关税率')),
                ('country_code', models.CharField(help_text='注册国家编码', max_length=5, verbose_name='注册国家编码')),
                ('reg_status', models.CharField(help_text='产品注册状态', max_length=10, verbose_name='产品注册状态')),
            ],
            options={
                'verbose_name_plural': '产品注册国家',
                'verbose_name': '产品注册国家',
            },
        ),
        migrations.CreateModel(
            name='RegProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logistics_company', models.CharField(help_text='物流公司', max_length=30, verbose_name='物流公司')),
                ('reg_length', models.FloatField(help_text='确认长', verbose_name='确认长')),
                ('reg_width', models.FloatField(help_text='确认宽', verbose_name='确认宽')),
                ('reg_heigth', models.FloatField(help_text='确认高', verbose_name='确认高')),
                ('reg_weight', models.FloatField(help_text='确认重量', verbose_name='确认重量')),
                ('reg_volume', models.FloatField(help_text='确认体积', verbose_name='确认体积')),
                ('is_active', models.BooleanField(default=False, help_text='商品是否有效', verbose_name='商品是否有效')),
                ('product', models.ForeignKey(help_text='对应产品', on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='对应产品')),
            ],
            options={
                'verbose_name_plural': '产品注册信息',
                'verbose_name': '产品注册信息',
            },
        ),
        migrations.CreateModel(
            name='Vcombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vsku', models.CharField(help_text='虚拟sku编码', max_length=30, verbose_name='虚拟sku编码')),
                ('combo_pack', models.ForeignKey(help_text='组合产品', null=True, on_delete=django.db.models.deletion.CASCADE, to='product.ComboPack', verbose_name='组合产品')),
            ],
            options={
                'verbose_name_plural': '组合虚拟sku',
                'verbose_name': '组合虚拟sku',
            },
        ),
        migrations.CreateModel(
            name='Vsku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vsku', models.CharField(help_text='虚拟sku编码', max_length=30, verbose_name='虚拟sku编码')),
                ('product', models.ForeignKey(help_text='对应产品', on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='对应产品')),
            ],
            options={
                'verbose_name_plural': '虚拟sku',
                'verbose_name': '虚拟sku',
            },
        ),
    ]
